/*
1. Рандомная генерация расовых свойств для всех мобов
2. Общая функция разделена на несколько мелких функцих для избежания дублирования кода.
3. Каждый моб имеет свой лист рандомизируемых переменных.
4. Настройка расы меняет этот список
*/

proc/random_color_16(var/r=255, var/g=255, var/b=255)
	return "#[num_10_to_sys(rand(0, r))][num_10_to_sys(rand(0, g))][num_10_to_sys(rand(0, b))]"

/*proc/random_properties_all(var/list/random_props = list(), var/container)
	if(!random_props || !container)		return


	for(var/mob_V in container.vars)	for(var/V in random_props)
		if(istype(V, container:*/

/*Что делать?
Общая функция берет все мобовые переменные из списка моба
Дальше, она берет рандомизированный список и попеременно сравнивает.
Но этого можно избежать, если точно все откалибровать. Значит, сравнение не нужно.


Указывается контейнер, в котором будут применяться изменения
Контейнером может быть настройка в сетапе(datum/preferences), либо, сам моб

Сначала нужно написать функцию рандомного цвета тела в первом сетапе
*/